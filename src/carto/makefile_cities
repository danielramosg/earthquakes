# Earthquake database
# https://data.opendatasoft.com/explore/dataset/significant-earthquake-database%40public/



# URL = https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/50m/physical/ne_50m_land.zip
URL_countries = https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/50m/cultural/ne_50m_admin_0_countries.zip
URL_places = https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/50m/cultural/ne_50m_populated_places.zip

# Goals
all: countries.geojson places.geojson #places.geojson #countries.topojson #clean

# Download the zip file from the Natural Earth server
ne_50m_admin_0_countries.zip:
	curl -LO $(URL_countries)

ne_50m_populated_places.zip:
	curl -LO $(URL_places)


# Unzip the shapefiles
ne_50m_admin_0_countries.shp: ne_50m_admin_0_countries.zip
	unzip ne_50m_admin_0_countries.zip
	touch ne_50m_admin_0_countries.shp

ne_50m_populated_places.shp: ne_50m_populated_places.zip
	unzip ne_50m_populated_places.zip
	touch ne_50m_populated_places.shp	

# Convert the shapefiles to GeoJSON
countries.geojson: ne_50m_admin_0_countries.shp
	ogr2ogr -f GeoJSON -where "ADM0_A3 IN ('ESP')" countries.geojson ne_50m_admin_0_countries.shp

places.geojson: ne_50m_populated_places.shp
#	ogr2ogr -f GeoJSON  places.geojson ne_50m_populated_places.shp
#	ogr2ogr -f GeoJSON -where "ISO_A2 = 'ES' AND SCALERANK < 8"  places.geojson ne_50m_populated_places.shp
	ogr2ogr -f GeoJSON -where "ADM0_A3 = 'ESP'"  places.geojson ne_50m_populated_places.shp

# Convert the GeoJSON file to TopoJSON
countries.topojson: countries.geojson
	topojson -p -o countries.topojson countries.geojson

# Remove source and temporary files
clean:
	rm ne_50m*
